import { Modal } from './modal.js';
import { cartStore } from '../stores/cartStore.js';

const priceSelectorModal = {
  open(product) {
    console.log('üè∑Ô∏è Opening price selector for:', product);

    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Muti-price ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!product.multi_prices || !Array.isArray(product.multi_prices) || product.multi_prices.length === 0) {
      console.log('‚ùå No multi_prices found, adding with base price');
      cartStore.addItem(product, product.base_price);
      return;
    }

    // 2. [‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç] ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á Label ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
    // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡∏°‡∏≤‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤
    const processedPrices = product.multi_prices
      .filter(p => p && typeof p.price === 'number' && !isNaN(p.price)) // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ price ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
      .map(p => ({
        price: p.price,
        label: (p.label && String(p.label).trim() !== '') ? p.label : `‡∏£‡∏≤‡∏Ñ‡∏≤ ${p.price} ‡∏ö‡∏≤‡∏ó`
      }));

    // 3. ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ï‡πà‡∏≠
    if (processedPrices.length === 0) {
      console.log('‚ùå No valid prices found after processing, adding with base price');
      cartStore.addItem(product, product.base_price);
      return;
    }

    if (processedPrices.length === 1) {
      console.log('üí∞ Only one valid price, adding directly');
      cartStore.addItem(product, processedPrices[0].price);
      return;
    }

    // 4. ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ (‡πÉ‡∏ä‡πâ processedPrices)
    const desiredOrder = [80, 50, 60, 90];
    const sortedPrices = [...processedPrices].sort((a, b) => {
        if (product.name === '‡∏ô‡πâ‡∏≥‡∏ú‡∏™‡∏°‡∏ù‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏ß‡∏î‡πÉ‡∏´‡∏ç‡πà') {
            return desiredOrder.indexOf(a.price) - desiredOrder.indexOf(b.price);
        }
        return a.price - b.price; // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÑ‡∏õ‡∏°‡∏≤‡∏Å
    });
    
    // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á Modal (‡πÉ‡∏ä‡πâ sortedPrices)
    const bodyHTML = `
      <div class="price-options">
        <p style="margin-bottom: 16px; color: #8e8e93; text-align: center;">
          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: <strong style="color: #ffffff;">${product.name}</strong>
        </p>
        ${sortedPrices.map(p => `
          <button class="price-option-btn" data-price="${p.price}">
            <strong>${p.label}</strong> - ${p.price} ‡∏ö‡∏≤‡∏ó
          </button>
        `).join('')}
      </div>
    `;

    const modal = Modal.create({
      title: `‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤`,
      body: bodyHTML,
      footer: `<button class="btn btn-cancel" id="close-price-selector">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>`
    });

    // 6. ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listeners
    setTimeout(() => {
      const priceButtons = document.querySelectorAll('.price-option-btn');
      console.log('üéØ Found price buttons:', priceButtons.length);
      
      priceButtons.forEach(btn => {
        btn.addEventListener('click', () => {
          const selectedPrice = parseFloat(btn.dataset.price);
          console.log('üí∞ Selected price:', selectedPrice, 'for product:', product.name);
          
          // ‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏õ‡∏ó‡∏µ‡πà cartStore
          cartStore.addItem(product, selectedPrice);
          
          modal.close();
        });
      });

      const cancelBtn = document.getElementById('close-price-selector');
      if (cancelBtn) {
        cancelBtn.addEventListener('click', () => {
          console.log('‚ùå Price selector cancelled');
          modal.close();
        });
      }
    }, 100);
  }
};

export { priceSelectorModal };
